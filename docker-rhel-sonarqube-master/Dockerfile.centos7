# docker build --pull -t sonarqube:6.7.1-centos7 -t sonarqube -f Dockerfile.centos7 .
FROM centos:centos7

ENV SONAR_VERSION=6.7.1 \
    SONARQUBE_HOME=/opt/sonarqube \
    # Database configuration
    # Defaults to using H2
    SONARQUBE_JDBC_USERNAME=sonar \
    SONARQUBE_JDBC_PASSWORD=sonar \
    SONARQUBE_JDBC_URL= \
    LANG=en_US.utf8 \
    JAVA_HOME=/usr/lib/jvm/jre

# Http port
EXPOSE 9000

LABEL name="sonarqube" \
      vendor="SonarSource" \
      version="${SONAR_VERSION}-centos7" \
      run='docker run -di \
            --name ${NAME} \
            -p 9000:9000 \
            $IMAGE' \
      io.k8s.description="SonarQube" \
      io.k8s.display-name="SonarQube" \
      io.openshift.build.commit.author="Red Hat Systems Engineering <refarch-feedback@redhat.com>" \
      io.openshift.expose-services="9000:9000" \
      io.openshift.tags="sonarqube,sonar,sonarsource"

RUN yum -y install --setopt=tsflags=nodocs java-1.8.0-openjdk unzip hostname && \
    yum clean all

RUN set -x \
    # pub   2048R/D26468DE 2015-05-25
    #       Key fingerprint = F118 2E81 C792 9289 21DB  CAB4 CFCA 4A29 D264 68DE
    # uid                  sonarsource_deployer (Sonarsource Deployer) <infra@sonarsource.com>
    # sub   2048R/06855C1D 2015-05-25
    gpg --gen-key && \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys F1182E81C792928921DBCAB4CFCA4A29D26468DE && \
    cd /opt && \
    curl -o sonarqube.zip -SL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SONAR_VERSION}.zip \
                --retry 9 --retry-max-time 0 -C - && \
    curl -o sonarqube.zip.asc -SL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SONAR_VERSION}.zip.asc \
                --retry 9 --retry-max-time 0 -C - && \
    gpg --batch --verify sonarqube.zip.asc sonarqube.zip && \
    unzip sonarqube.zip && \
    mv sonarqube-${SONAR_VERSION} sonarqube && \
    rm sonarqube.zip* && \
    rm -rf ${SONARQUBE_HOME}/bin/*

COPY run.sh ${SONARQUBE_HOME}/bin/
ENV PATH=$PATH:${SONARQUBE_HOME}/bin
RUN useradd -l -u 10001 -r -g 0 -m -s /sbin/nologin \
        -c "sonarqube application user" sonarqube && \
    chown -R 10001:0 ${SONARQUBE_HOME} && \
    chmod -R g=u ${SONARQUBE_HOME} && \
    chmod ug+x ${SONARQUBE_HOME}/bin/run.sh

VOLUME ["${SONARQUBE_HOME}/data", "${SONARQUBE_HOME}/extensions"]

USER 10001
WORKDIR ${SONARQUBE_HOME}
ENTRYPOINT run.sh
